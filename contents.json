{
  "paths": [
    "README.md",
    "answer.schema.md",
    "atom.schema.md",
    "calculation-exercise.schema.md",
    "exercise.schema.md",
    "expression-exercise.schema.md",
    "list-exercise.schema.md",
    "multiple-choice-exercise.schema.md",
    "multistep-calculation-exercise.schema.md",
    "programming-exercise.schema.md",
    "simple-text-exercise.schema.md",
    "single-choice-exercise.schema.md",
    "sorting-exercise.schema.md"
  ],
  "contents": [
    {
      "path": "README.md",
      "url": "README.html",
      "content": "# Readme\n\n## /\n\n- [calculation-question/core](./calculation-exercise.schema.md) – `` (Unknown)\n- [common/answer](./answer.schema.md) – `` (Unknown)\n- [expression-question/core](./expression-exercise.schema.md) – `` (Unknown)\n- [learning-object-schema/exercise](./exercise.schema.md) – `` (Unknown)\n- [list-question/core](./list-exercise.schema.md) – `` (Unknown)\n- [multiple-choice/core](./multiple-choice-exercise.schema.md) – `` (Unknown)\n- [multistep-calculation-question/core](./multistep-calculation-exercise.schema.md) – `` (Unknown)\n- [programming-question/core](./programming-exercise.schema.md) – `` (Unknown)\n- [simpletext/core](./simple-text-exercise.schema.md) – `` (Unknown)\n- [sorting-question/core](./sorting-exercise.schema.md) – `` (Unknown)\n- [](./atom.schema.md) – `` (Unknown)\n- [](./single-choice-exercise.schema.md) – `` (Unknown)\n",
      "html": "<h1>Readme</h1>\n<h2>/</h2>\n<ul>\n<li><a href=\"./calculation-exercise.schema.html\">calculation-question/core</a> – `` (Unknown)</li>\n<li><a href=\"./answer.schema.html\">common/answer</a> – `` (Unknown)</li>\n<li><a href=\"./expression-exercise.schema.html\">expression-question/core</a> – `` (Unknown)</li>\n<li><a href=\"./exercise.schema.html\">learning-object-schema/exercise</a> – `` (Unknown)</li>\n<li><a href=\"./list-exercise.schema.html\">list-question/core</a> – `` (Unknown)</li>\n<li><a href=\"./multiple-choice-exercise.schema.html\">multiple-choice/core</a> – `` (Unknown)</li>\n<li><a href=\"./multistep-calculation-exercise.schema.html\">multistep-calculation-question/core</a> – `` (Unknown)</li>\n<li><a href=\"./programming-exercise.schema.html\">programming-question/core</a> – `` (Unknown)</li>\n<li><a href=\"./simple-text-exercise.schema.html\">simpletext/core</a> – `` (Unknown)</li>\n<li><a href=\"./sorting-exercise.schema.html\">sorting-question/core</a> – `` (Unknown)</li>\n<li><a href=\"./atom.schema.html\"></a> – `` (Unknown)</li>\n<li><a href=\"./single-choice-exercise.schema.html\"></a> – `` (Unknown)</li>\n</ul>\n",
      "id": 0
    },
    {
      "path": "answer.schema.md",
      "url": "answer.schema.html",
      "content": "# common/answer Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                               |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | ---------------------------------------- |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [answer.schema.json](answer.schema.json) |\n\n# common/answer Properties\n\n| Property            | Type      | Required     | Nullable | Defined by                                 |\n| ------------------- | --------- | ------------ | -------- | ------------------------------------------ |\n| [correct](#correct) | `boolean` | **Required** | No       | common/answer (this schema)                |\n| [points](#points)   | `number`  | **Required** | No       | common/answer (this schema)                |\n| [text](#text)       | `string`  | **Required** | No       | common/answer (this schema)                |\n| `*`                 | any       | Additional   | Yes      | this schema _allows_ additional properties |\n\n## correct\n\n`correct`\n\n- is **required**\n- type: `boolean`\n- defined in this schema\n\n### correct Type\n\n`boolean`\n\n## points\n\n`points`\n\n- is **required**\n- type: `number`\n- defined in this schema\n\n### points Type\n\n`number`\n\n## text\n\n`text`\n\n- is **required**\n- type: `string`\n- defined in this schema\n\n### text Type\n\n`string`\n",
      "html": "<h1>common/answer Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"answer.schema.json\">answer.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>common/answer Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#correct\">correct</a></td>\n<td><code>boolean</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>common/answer (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#points\">points</a></td>\n<td><code>number</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>common/answer (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#text\">text</a></td>\n<td><code>string</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>common/answer (this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>correct</h2>\n<p><code>correct</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>correct Type</h3>\n<p><code>boolean</code></p>\n<h2>points</h2>\n<p><code>points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>points Type</h3>\n<p><code>number</code></p>\n<h2>text</h2>\n<p><code>text</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>text Type</h3>\n<p><code>string</code></p>\n",
      "id": 1
    },
    {
      "path": "atom.schema.md",
      "url": "atom.schema.html",
      "content": "# Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                           |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | ------------------------------------ |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [atom.schema.json](atom.schema.json) |\n\n# Properties\n\n| Property              | Type     | Required     | Nullable | Defined by                                 |\n| --------------------- | -------- | ------------ | -------- | ------------------------------------------ |\n| [core](#core)         | `object` | **Required** | No       | (this schema)                              |\n| [id](#id)             | `string` | **Required** | No       | (this schema)                              |\n| [metadata](#metadata) | `object` | Optional     | No       | (this schema)                              |\n| [title](#title)       | `string` | **Required** | No       | (this schema)                              |\n| [type](#type)         | `enum`   | **Required** | No       | (this schema)                              |\n| `*`                   | any      | Additional   | Yes      | this schema _allows_ additional properties |\n\n## core\n\n### atom/core\n\n`core`\n\n- is **required**\n- type: `object`\n- defined in this schema\n\n### core Type\n\n`object` with following properties:\n\n| Property | Type  | Required |\n| -------- | ----- | -------- |\n| `tags`   | array | Optional |\n\n#### tags\n\n`tags`\n\n- is optional\n- type: `string[]`\n\n##### tags Type\n\nArray type: `string[]`\n\nAll items must be of the type: `string`\n\n## id\n\n`id`\n\n- is **required**\n- type: `string`\n- defined in this schema\n\n### id Type\n\n`string`\n\n## metadata\n\n### atom/metadata\n\n`metadata`\n\n- is optional\n- type: `object`\n- defined in this schema\n\n### metadata Type\n\n`object` with following properties:\n\n| Property | Type  | Required |\n| -------- | ----- | -------- |\n| `tags`   | array | Optional |\n\n#### tags\n\n`tags`\n\n- is optional\n- type: `string[]`\n\n##### tags Type\n\nArray type: `string[]`\n\nAll items must be of the type: `string`\n\n## title\n\n`title`\n\n- is **required**\n- type: `string`\n- defined in this schema\n\n### title Type\n\n`string`\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value      | Description |\n| ---------- | ----------- |\n| `video`    |             |\n| `section`  |             |\n| `exercise` |             |\n| `page`     |             |\n",
      "html": "<h1>Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"atom.schema.json\">atom.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#core\">core</a></td>\n<td><code>object</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>(this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#id\">id</a></td>\n<td><code>string</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>(this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#metadata\">metadata</a></td>\n<td><code>object</code></td>\n<td>Optional</td>\n<td>No</td>\n<td>(this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#title\">title</a></td>\n<td><code>string</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>(this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>(this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>core</h2>\n<h3>atom/core</h3>\n<p><code>core</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>core Type</h3>\n<p><code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>tags</code></td>\n<td>array</td>\n<td>Optional</td>\n</tr>\n</tbody>\n</table>\n<h4>tags</h4>\n<p><code>tags</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>string[]</code></li>\n</ul>\n<h5>tags Type</h5>\n<p>Array type: <code>string[]</code></p>\n<p>All items must be of the type: <code>string</code></p>\n<h2>id</h2>\n<p><code>id</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>id Type</h3>\n<p><code>string</code></p>\n<h2>metadata</h2>\n<h3>atom/metadata</h3>\n<p><code>metadata</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>object</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>metadata Type</h3>\n<p><code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>tags</code></td>\n<td>array</td>\n<td>Optional</td>\n</tr>\n</tbody>\n</table>\n<h4>tags</h4>\n<p><code>tags</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>string[]</code></li>\n</ul>\n<h5>tags Type</h5>\n<p>Array type: <code>string[]</code></p>\n<p>All items must be of the type: <code>string</code></p>\n<h2>title</h2>\n<p><code>title</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>title Type</h3>\n<p><code>string</code></p>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>video</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>section</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>exercise</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
      "id": 2
    },
    {
      "path": "calculation-exercise.schema.md",
      "url": "calculation-exercise.schema.html",
      "content": "# calculation-question/core Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                                                           |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | -------------------------------------------------------------------- |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [calculation-exercise.schema.json](calculation-exercise.schema.json) |\n\n# calculation-question/core Properties\n\n| Property                              | Type       | Required     | Nullable | Defined by                                 |\n| ------------------------------------- | ---------- | ------------ | -------- | ------------------------------------------ |\n| [calculations](#calculations)         | `object[]` | **Required** | No       | calculation-question/core (this schema)    |\n| [shuffled](#shuffled)                 | `boolean`  | **Required** | No       | calculation-question/core (this schema)    |\n| [task-description](#task-description) | `object[]` | **Required** | No       | calculation-question/core (this schema)    |\n| [type](#type)                         | `enum`     | **Required** | No       | calculation-question/core (this schema)    |\n| [with-oom](#with-oom)                 | `boolean`  | **Required** | No       | calculation-question/core (this schema)    |\n| [with-units](#with-units)             | `boolean`  | **Required** | No       | calculation-question/core (this schema)    |\n| `*`                                   | any        | Additional   | Yes      | this schema _allows_ additional properties |\n\n## calculations\n\n`calculations`\n\n- is **required**\n- type: `object[]`\n- defined in this schema\n\n### calculations Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property             | Type    | Required     |\n| -------------------- | ------- | ------------ |\n| `correct-points`     | integer | **Required** |\n| `id`                 | string  | **Required** |\n| `incorrect-points`   | integer | **Required** |\n| `name`               | string  | **Required** |\n| `number`             | string  | **Required** |\n| `order-of-magnitude` | string  | **Required** |\n| `units`              | array   | **Required** |\n\n#### correct-points\n\n`correct-points`\n\n- is **required**\n- type: `integer`\n\n##### correct-points Type\n\n`integer`\n\n#### id\n\n`id`\n\n- is **required**\n- type: `string`\n\n##### id Type\n\n`string`\n\n#### incorrect-points\n\n`incorrect-points`\n\n- is **required**\n- type: `integer`\n\n##### incorrect-points Type\n\n`integer`\n\n#### name\n\n`name`\n\n- is **required**\n- type: `string`\n\n##### name Type\n\n`string`\n\n#### number\n\n`number`\n\n- is **required**\n- type: `string`\n\n##### number Type\n\n`string`\n\n#### order-of-magnitude\n\n`order-of-magnitude`\n\n- is **required**\n- type: `string`\n\n##### order-of-magnitude Type\n\n`string`\n\n#### units\n\n`units`\n\n- is **required**\n- type: `object[]`\n\n##### units Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property | Type   | Required     |\n| -------- | ------ | ------------ |\n| `expo`   | string | **Required** |\n| `prefix` | string | **Required** |\n| `unit`   | string | **Required** |\n\n#### expo\n\n`expo`\n\n- is **required**\n- type: `string`\n\n##### expo Type\n\n`string`\n\n#### prefix\n\n`prefix`\n\n- is **required**\n- type: `string`\n\n##### prefix Type\n\n`string`\n\n#### unit\n\n`unit`\n\n- is **required**\n- type: `string`\n\n##### unit Type\n\n`string`\n\n## shuffled\n\n`shuffled`\n\n- is **required**\n- type: `boolean`\n- defined in this schema\n\n### shuffled Type\n\n`boolean`\n\n## task-description\n\n`task-description`\n\n- is **required**\n- type: `object[]`\n- defined in this schema\n\n### task-description Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property | Type | Required |\n| -------- | ---- | -------- |\n\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value         | Description |\n| ------------- | ----------- |\n| `calculation` |             |\n\n## with-oom\n\n`with-oom`\n\n- is **required**\n- type: `boolean`\n- defined in this schema\n\n### with-oom Type\n\n`boolean`\n\n## with-units\n\n`with-units`\n\n- is **required**\n- type: `boolean`\n- defined in this schema\n\n### with-units Type\n\n`boolean`\n",
      "html": "<h1>calculation-question/core Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"calculation-exercise.schema.json\">calculation-exercise.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>calculation-question/core Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#calculations\">calculations</a></td>\n<td><code>object[]</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#shuffled\">shuffled</a></td>\n<td><code>boolean</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#task-description\">task-description</a></td>\n<td><code>object[]</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#with-oom\">with-oom</a></td>\n<td><code>boolean</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#with-units\">with-units</a></td>\n<td><code>boolean</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>calculations</h2>\n<p><code>calculations</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>calculations Type</h3>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>correct-points</code></td>\n<td>integer</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>incorrect-points</code></td>\n<td>integer</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>number</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>order-of-magnitude</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>units</code></td>\n<td>array</td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>correct-points</h4>\n<p><code>correct-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>integer</code></li>\n</ul>\n<h5>correct-points Type</h5>\n<p><code>integer</code></p>\n<h4>id</h4>\n<p><code>id</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>id Type</h5>\n<p><code>string</code></p>\n<h4>incorrect-points</h4>\n<p><code>incorrect-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>integer</code></li>\n</ul>\n<h5>incorrect-points Type</h5>\n<p><code>integer</code></p>\n<h4>name</h4>\n<p><code>name</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>name Type</h5>\n<p><code>string</code></p>\n<h4>number</h4>\n<p><code>number</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>number Type</h5>\n<p><code>string</code></p>\n<h4>order-of-magnitude</h4>\n<p><code>order-of-magnitude</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>order-of-magnitude Type</h5>\n<p><code>string</code></p>\n<h4>units</h4>\n<p><code>units</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n</ul>\n<h5>units Type</h5>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>expo</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>prefix</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>expo</h4>\n<p><code>expo</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>expo Type</h5>\n<p><code>string</code></p>\n<h4>prefix</h4>\n<p><code>prefix</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>prefix Type</h5>\n<p><code>string</code></p>\n<h4>unit</h4>\n<p><code>unit</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>unit Type</h5>\n<p><code>string</code></p>\n<h2>shuffled</h2>\n<p><code>shuffled</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>shuffled Type</h3>\n<p><code>boolean</code></p>\n<h2>task-description</h2>\n<p><code>task-description</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>task-description Type</h3>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody></tbody>\n</table>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>calculation</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>with-oom</h2>\n<p><code>with-oom</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>with-oom Type</h3>\n<p><code>boolean</code></p>\n<h2>with-units</h2>\n<p><code>with-units</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>with-units Type</h3>\n<p><code>boolean</code></p>\n",
      "id": 3
    },
    {
      "path": "exercise.schema.md",
      "url": "exercise.schema.html",
      "content": "# learning-object-schema/exercise Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                                   |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | -------------------------------------------- |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [exercise.schema.json](exercise.schema.json) |\n\n# learning-object-schema/exercise Properties\n\n| Property      | Type     | Required     | Nullable | Defined by                                    |\n| ------------- | -------- | ------------ | -------- | --------------------------------------------- |\n| [core](#core) | `object` | **Required** | No       | learning-object-schema/exercise (this schema) |\n| [type](#type) | `enum`   | **Required** | No       | learning-object-schema/exercise (this schema) |\n| `*`           | any      | Additional   | Yes      | this schema _allows_ additional properties    |\n\n## core\n\n`core`\n\n- is **required**\n- type: `object`\n- defined in this schema\n\n### core Type\n\n`object` with following properties:\n\n| Property | Type | Required     |\n| -------- | ---- | ------------ |\n| `type`   |      | **Required** |\n\n#### type\n\n`type`\n\n- is **required**\n- type: `enum`\n\nThe value of this property **must** be equal to one of the [known values below](#core-known-values).\n\n##### type Known Values\n\n| Value                   | Description |\n| ----------------------- | ----------- |\n| `expression`            |             |\n| `single-choice`         |             |\n| `programming`           |             |\n| `simple-text`           |             |\n| `multistep-calculation` |             |\n| `list`                  |             |\n| `calculation`           |             |\n| `multiple-choice`       |             |\n| `sorting`               |             |\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value      | Description |\n| ---------- | ----------- |\n| `exercise` |             |\n",
      "html": "<h1>learning-object-schema/exercise Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"exercise.schema.json\">exercise.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>learning-object-schema/exercise Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#core\">core</a></td>\n<td><code>object</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>learning-object-schema/exercise (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>learning-object-schema/exercise (this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>core</h2>\n<p><code>core</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>core Type</h3>\n<p><code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td></td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>type</h4>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#core-known-values\">known values below</a>.</p>\n<h5>type Known Values</h5>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>expression</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>single-choice</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>programming</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>simple-text</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>multistep-calculation</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>list</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>calculation</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>multiple-choice</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>sorting</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>exercise</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
      "id": 4
    },
    {
      "path": "expression-exercise.schema.md",
      "url": "expression-exercise.schema.html",
      "content": "# expression-question/core Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                                                         |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | ------------------------------------------------------------------ |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [expression-exercise.schema.json](expression-exercise.schema.json) |\n\n# expression-question/core Properties\n\n| Property                      | Type       | Required     | Nullable | Defined by                                 |\n| ----------------------------- | ---------- | ------------ | -------- | ------------------------------------------ |\n| [expressions](#expressions)   | `object[]` | **Required** | No       | expression-question/core (this schema)     |\n| [input-format](#input-format) | complex    | **Required** | No       | expression-question/core (this schema)     |\n| [type](#type)                 | `enum`     | **Required** | No       | expression-question/core (this schema)     |\n| `*`                           | any        | Additional   | Yes      | this schema _allows_ additional properties |\n\n## expressions\n\n`expressions`\n\n- is **required**\n- type: `object[]`\n- defined in this schema\n\n### expressions Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property           | Type   | Required     |\n| ------------------ | ------ | ------------ |\n| `correct-points`   | number | **Required** |\n| `id`               | string | **Required** |\n| `incorrect-points` | number | **Required** |\n| `text`             | string | **Required** |\n\n#### correct-points\n\n`correct-points`\n\n- is **required**\n- type: `number`\n\n##### correct-points Type\n\n`number`\n\n#### id\n\n`id`\n\n- is **required**\n- type: `string`\n\n##### id Type\n\n`string`\n\n#### incorrect-points\n\n`incorrect-points`\n\n- is **required**\n- type: `number`\n\n##### incorrect-points Type\n\n`number`\n\n#### text\n\n`text`\n\n- is **required**\n- type: `string`\n\n##### text Type\n\n`string`\n\n## input-format\n\n`input-format`\n\n- is **required**\n- type: complex\n- defined in this schema\n\n### input-format Type\n\nUnknown type ``.\n\n```json\n{\n  \"isrequired\": true,\n  \"simpletype\": \"complex\"\n}\n```\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value        | Description |\n| ------------ | ----------- |\n| `expression` |             |\n",
      "html": "<h1>expression-question/core Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"expression-exercise.schema.json\">expression-exercise.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>expression-question/core Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#expressions\">expressions</a></td>\n<td><code>object[]</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>expression-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#input-format\">input-format</a></td>\n<td>complex</td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>expression-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>expression-question/core (this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>expressions</h2>\n<p><code>expressions</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>expressions Type</h3>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>correct-points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>incorrect-points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>correct-points</h4>\n<p><code>correct-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>correct-points Type</h5>\n<p><code>number</code></p>\n<h4>id</h4>\n<p><code>id</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>id Type</h5>\n<p><code>string</code></p>\n<h4>incorrect-points</h4>\n<p><code>incorrect-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>incorrect-points Type</h5>\n<p><code>number</code></p>\n<h4>text</h4>\n<p><code>text</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>text Type</h5>\n<p><code>string</code></p>\n<h2>input-format</h2>\n<p><code>input-format</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: complex</li>\n<li>defined in this schema</li>\n</ul>\n<h3>input-format Type</h3>\n<p>Unknown type ``.</p>\n<pre><code class=\"language-json\">{\n  &quot;isrequired&quot;: true,\n  &quot;simpletype&quot;: &quot;complex&quot;\n}\n</code></pre>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>expression</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
      "id": 5
    },
    {
      "path": "list-exercise.schema.md",
      "url": "list-exercise.schema.html",
      "content": "# list-question/core Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                                             |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | ------------------------------------------------------ |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [list-exercise.schema.json](list-exercise.schema.json) |\n\n# list-question/core Properties\n\n| Property            | Type       | Required     | Nullable | Defined by                                 |\n| ------------------- | ---------- | ------------ | -------- | ------------------------------------------ |\n| [answers](#answers) | `object[]` | **Required** | No       | list-question/core (this schema)           |\n| [ordered](#ordered) | `boolean`  | Optional     | No       | list-question/core (this schema)           |\n| [type](#type)       | `enum`     | **Required** | No       | list-question/core (this schema)           |\n| `*`                 | any        | Additional   | Yes      | this schema _allows_ additional properties |\n\n## answers\n\n`answers`\n\n- is **required**\n- type: `object[]`\n- defined in this schema\n\n### answers Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property        | Type   | Required     |\n| --------------- | ------ | ------------ |\n| `missed-points` | number | **Required** |\n| `points`        | number | **Required** |\n| `text`          | string | **Required** |\n\n#### missed-points\n\n`missed-points`\n\n- is **required**\n- type: `number`\n\n##### missed-points Type\n\n`number`\n\n#### points\n\n`points`\n\n- is **required**\n- type: `number`\n\n##### points Type\n\n`number`\n\n#### text\n\n`text`\n\n- is **required**\n- type: `string`\n\n##### text Type\n\n`string`\n\n## ordered\n\n`ordered`\n\n- is optional\n- type: `boolean`\n- defined in this schema\n\n### ordered Type\n\n`boolean`\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value  | Description |\n| ------ | ----------- |\n| `list` |             |\n",
      "html": "<h1>list-question/core Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"list-exercise.schema.json\">list-exercise.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>list-question/core Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#answers\">answers</a></td>\n<td><code>object[]</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>list-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#ordered\">ordered</a></td>\n<td><code>boolean</code></td>\n<td>Optional</td>\n<td>No</td>\n<td>list-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>list-question/core (this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>answers</h2>\n<p><code>answers</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>answers Type</h3>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>missed-points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>missed-points</h4>\n<p><code>missed-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>missed-points Type</h5>\n<p><code>number</code></p>\n<h4>points</h4>\n<p><code>points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>points Type</h5>\n<p><code>number</code></p>\n<h4>text</h4>\n<p><code>text</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>text Type</h5>\n<p><code>string</code></p>\n<h2>ordered</h2>\n<p><code>ordered</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>ordered Type</h3>\n<p><code>boolean</code></p>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>list</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
      "id": 6
    },
    {
      "path": "multiple-choice-exercise.schema.md",
      "url": "multiple-choice-exercise.schema.html",
      "content": "# multiple-choice/core Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                                                                   |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | ---------------------------------------------------------------------------- |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [multiple-choice-exercise.schema.json](multiple-choice-exercise.schema.json) |\n\n# multiple-choice/core Properties\n\n| Property              | Type       | Required     | Nullable | Defined by                                 |\n| --------------------- | ---------- | ------------ | -------- | ------------------------------------------ |\n| [answers](#answers)   | `object[]` | **Required** | No       | multiple-choice/core (this schema)         |\n| [shuffled](#shuffled) | `boolean`  | Optional     | No       | multiple-choice/core (this schema)         |\n| [type](#type)         | `enum`     | **Required** | No       | multiple-choice/core (this schema)         |\n| [voting](#voting)     | `boolean`  | Optional     | No       | multiple-choice/core (this schema)         |\n| `*`                   | any        | Additional   | Yes      | this schema _allows_ additional properties |\n\n## answers\n\n`answers`\n\n- is **required**\n- type: `object[]`\n- defined in this schema\n\n### answers Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property           | Type   | Required     |\n| ------------------ | ------ | ------------ |\n| `checked-points`   | number | **Required** |\n| `text`             | string | **Required** |\n| `unchecked-points` | number | **Required** |\n\n#### checked-points\n\n`checked-points`\n\n- is **required**\n- type: `number`\n\n##### checked-points Type\n\n`number`\n\n#### text\n\n`text`\n\n- is **required**\n- type: `string`\n\n##### text Type\n\n`string`\n\n#### unchecked-points\n\n`unchecked-points`\n\n- is **required**\n- type: `number`\n\n##### unchecked-points Type\n\n`number`\n\n## shuffled\n\n`shuffled`\n\n- is optional\n- type: `boolean`\n- defined in this schema\n\n### shuffled Type\n\n`boolean`\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value             | Description |\n| ----------------- | ----------- |\n| `multiple-choice` |             |\n\n## voting\n\n`voting`\n\n- is optional\n- type: `boolean`\n- defined in this schema\n\n### voting Type\n\n`boolean`\n",
      "html": "<h1>multiple-choice/core Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"multiple-choice-exercise.schema.json\">multiple-choice-exercise.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>multiple-choice/core Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#answers\">answers</a></td>\n<td><code>object[]</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>multiple-choice/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#shuffled\">shuffled</a></td>\n<td><code>boolean</code></td>\n<td>Optional</td>\n<td>No</td>\n<td>multiple-choice/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>multiple-choice/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#voting\">voting</a></td>\n<td><code>boolean</code></td>\n<td>Optional</td>\n<td>No</td>\n<td>multiple-choice/core (this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>answers</h2>\n<p><code>answers</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>answers Type</h3>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>checked-points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>unchecked-points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>checked-points</h4>\n<p><code>checked-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>checked-points Type</h5>\n<p><code>number</code></p>\n<h4>text</h4>\n<p><code>text</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>text Type</h5>\n<p><code>string</code></p>\n<h4>unchecked-points</h4>\n<p><code>unchecked-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>unchecked-points Type</h5>\n<p><code>number</code></p>\n<h2>shuffled</h2>\n<p><code>shuffled</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>shuffled Type</h3>\n<p><code>boolean</code></p>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>multiple-choice</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>voting</h2>\n<p><code>voting</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>voting Type</h3>\n<p><code>boolean</code></p>\n",
      "id": 7
    },
    {
      "path": "multistep-calculation-exercise.schema.md",
      "url": "multistep-calculation-exercise.schema.html",
      "content": "# multistep-calculation-question/core Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                                                                               |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | ---------------------------------------------------------------------------------------- |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [multistep-calculation-exercise.schema.json](multistep-calculation-exercise.schema.json) |\n\n# multistep-calculation-question/core Properties\n\n| Property                                          | Type       | Required     | Nullable | Defined by                                        |\n| ------------------------------------------------- | ---------- | ------------ | -------- | ------------------------------------------------- |\n| [multistep-calculations](#multistep-calculations) | `object[]` | **Required** | No       | multistep-calculation-question/core (this schema) |\n| [shuffled](#shuffled)                             | `boolean`  | **Required** | No       | multistep-calculation-question/core (this schema) |\n| [task-description](#task-description)             | `object[]` | **Required** | No       | multistep-calculation-question/core (this schema) |\n| [type](#type)                                     | `enum`     | **Required** | No       | multistep-calculation-question/core (this schema) |\n| [with-oom](#with-oom)                             | `boolean`  | **Required** | No       | multistep-calculation-question/core (this schema) |\n| [with-units](#with-units)                         | `boolean`  | **Required** | No       | multistep-calculation-question/core (this schema) |\n| `*`                                               | any        | Additional   | Yes      | this schema _allows_ additional properties        |\n\n## multistep-calculations\n\n`multistep-calculations`\n\n- is **required**\n- type: `object[]`\n- defined in this schema\n\n### multistep-calculations Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property             | Type    | Required     |\n| -------------------- | ------- | ------------ |\n| `correct-points`     | integer | **Required** |\n| `id`                 | string  | **Required** |\n| `incorrect-points`   | integer | **Required** |\n| `name`               | string  | **Required** |\n| `number`             | string  | **Required** |\n| `order-of-magnitude` | string  | **Required** |\n| `units`              | array   | **Required** |\n\n#### correct-points\n\n`correct-points`\n\n- is **required**\n- type: `integer`\n\n##### correct-points Type\n\n`integer`\n\n#### id\n\n`id`\n\n- is **required**\n- type: `string`\n\n##### id Type\n\n`string`\n\n#### incorrect-points\n\n`incorrect-points`\n\n- is **required**\n- type: `integer`\n\n##### incorrect-points Type\n\n`integer`\n\n#### name\n\n`name`\n\n- is **required**\n- type: `string`\n\n##### name Type\n\n`string`\n\n#### number\n\n`number`\n\n- is **required**\n- type: `string`\n\n##### number Type\n\n`string`\n\n#### order-of-magnitude\n\n`order-of-magnitude`\n\n- is **required**\n- type: `string`\n\n##### order-of-magnitude Type\n\n`string`\n\n#### units\n\n`units`\n\n- is **required**\n- type: `object[]`\n\n##### units Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property | Type   | Required     |\n| -------- | ------ | ------------ |\n| `expo`   | string | **Required** |\n| `prefix` | string | **Required** |\n| `unit`   | string | **Required** |\n\n#### expo\n\n`expo`\n\n- is **required**\n- type: `string`\n\n##### expo Type\n\n`string`\n\n#### prefix\n\n`prefix`\n\n- is **required**\n- type: `string`\n\n##### prefix Type\n\n`string`\n\n#### unit\n\n`unit`\n\n- is **required**\n- type: `string`\n\n##### unit Type\n\n`string`\n\n## shuffled\n\n`shuffled`\n\n- is **required**\n- type: `boolean`\n- defined in this schema\n\n### shuffled Type\n\n`boolean`\n\n## task-description\n\n`task-description`\n\n- is **required**\n- type: `object[]`\n- defined in this schema\n\n### task-description Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property | Type | Required |\n| -------- | ---- | -------- |\n\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value                   | Description |\n| ----------------------- | ----------- |\n| `multistep-calculation` |             |\n\n## with-oom\n\n`with-oom`\n\n- is **required**\n- type: `boolean`\n- defined in this schema\n\n### with-oom Type\n\n`boolean`\n\n## with-units\n\n`with-units`\n\n- is **required**\n- type: `boolean`\n- defined in this schema\n\n### with-units Type\n\n`boolean`\n",
      "html": "<h1>multistep-calculation-question/core Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"multistep-calculation-exercise.schema.json\">multistep-calculation-exercise.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>multistep-calculation-question/core Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#multistep-calculations\">multistep-calculations</a></td>\n<td><code>object[]</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>multistep-calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#shuffled\">shuffled</a></td>\n<td><code>boolean</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>multistep-calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#task-description\">task-description</a></td>\n<td><code>object[]</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>multistep-calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>multistep-calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#with-oom\">with-oom</a></td>\n<td><code>boolean</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>multistep-calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#with-units\">with-units</a></td>\n<td><code>boolean</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>multistep-calculation-question/core (this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>multistep-calculations</h2>\n<p><code>multistep-calculations</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>multistep-calculations Type</h3>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>correct-points</code></td>\n<td>integer</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>incorrect-points</code></td>\n<td>integer</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>name</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>number</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>order-of-magnitude</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>units</code></td>\n<td>array</td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>correct-points</h4>\n<p><code>correct-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>integer</code></li>\n</ul>\n<h5>correct-points Type</h5>\n<p><code>integer</code></p>\n<h4>id</h4>\n<p><code>id</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>id Type</h5>\n<p><code>string</code></p>\n<h4>incorrect-points</h4>\n<p><code>incorrect-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>integer</code></li>\n</ul>\n<h5>incorrect-points Type</h5>\n<p><code>integer</code></p>\n<h4>name</h4>\n<p><code>name</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>name Type</h5>\n<p><code>string</code></p>\n<h4>number</h4>\n<p><code>number</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>number Type</h5>\n<p><code>string</code></p>\n<h4>order-of-magnitude</h4>\n<p><code>order-of-magnitude</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>order-of-magnitude Type</h5>\n<p><code>string</code></p>\n<h4>units</h4>\n<p><code>units</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n</ul>\n<h5>units Type</h5>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>expo</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>prefix</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>expo</h4>\n<p><code>expo</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>expo Type</h5>\n<p><code>string</code></p>\n<h4>prefix</h4>\n<p><code>prefix</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>prefix Type</h5>\n<p><code>string</code></p>\n<h4>unit</h4>\n<p><code>unit</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>unit Type</h5>\n<p><code>string</code></p>\n<h2>shuffled</h2>\n<p><code>shuffled</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>shuffled Type</h3>\n<p><code>boolean</code></p>\n<h2>task-description</h2>\n<p><code>task-description</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>task-description Type</h3>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody></tbody>\n</table>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>multistep-calculation</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>with-oom</h2>\n<p><code>with-oom</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>with-oom Type</h3>\n<p><code>boolean</code></p>\n<h2>with-units</h2>\n<p><code>with-units</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>with-units Type</h3>\n<p><code>boolean</code></p>\n",
      "id": 8
    },
    {
      "path": "programming-exercise.schema.md",
      "url": "programming-exercise.schema.html",
      "content": "# programming-question/core Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                                                           |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | -------------------------------------------------------------------- |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [programming-exercise.schema.json](programming-exercise.schema.json) |\n\n# programming-question/core Properties\n\n| Property                        | Type       | Required     | Nullable | Defined by                                 |\n| ------------------------------- | ---------- | ------------ | -------- | ------------------------------------------ |\n| [code-template](#code-template) | `string`   | Optional     | No       | programming-question/core (this schema)    |\n| [language](#language)           | complex    | **Required** | No       | programming-question/core (this schema)    |\n| [type](#type)                   | `enum`     | **Required** | No       | programming-question/core (this schema)    |\n| [unit-tests](#unit-tests)       | `object[]` | **Required** | No       | programming-question/core (this schema)    |\n| `*`                             | any        | Additional   | Yes      | this schema _allows_ additional properties |\n\n## code-template\n\n`code-template`\n\n- is optional\n- type: `string`\n- defined in this schema\n\n### code-template Type\n\n`string`\n\n## language\n\n`language`\n\n- is **required**\n- type: complex\n- defined in this schema\n\n### language Type\n\nUnknown type ``.\n\n```json\n{\n  \"isrequired\": true,\n  \"simpletype\": \"complex\"\n}\n```\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value         | Description |\n| ------------- | ----------- |\n| `programming` |             |\n\n## unit-tests\n\n`unit-tests`\n\n- is **required**\n- type: `object[]`\n- defined in this schema\n\n### unit-tests Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property           | Type   | Required     |\n| ------------------ | ------ | ------------ |\n| `correct-points`   | number | **Required** |\n| `id`               | string | **Required** |\n| `incorrect-points` | number | **Required** |\n| `testcode`         | string | **Required** |\n| `title`            | string | **Required** |\n\n#### correct-points\n\n`correct-points`\n\n- is **required**\n- type: `number`\n\n##### correct-points Type\n\n`number`\n\n#### id\n\n`id`\n\n- is **required**\n- type: `string`\n\n##### id Type\n\n`string`\n\n#### incorrect-points\n\n`incorrect-points`\n\n- is **required**\n- type: `number`\n\n##### incorrect-points Type\n\n`number`\n\n#### testcode\n\n`testcode`\n\n- is **required**\n- type: `string`\n\n##### testcode Type\n\n`string`\n\n#### title\n\n`title`\n\n- is **required**\n- type: `string`\n\n##### title Type\n\n`string`\n",
      "html": "<h1>programming-question/core Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"programming-exercise.schema.json\">programming-exercise.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>programming-question/core Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#code-template\">code-template</a></td>\n<td><code>string</code></td>\n<td>Optional</td>\n<td>No</td>\n<td>programming-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#language\">language</a></td>\n<td>complex</td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>programming-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>programming-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#unit-tests\">unit-tests</a></td>\n<td><code>object[]</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>programming-question/core (this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>code-template</h2>\n<p><code>code-template</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>string</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>code-template Type</h3>\n<p><code>string</code></p>\n<h2>language</h2>\n<p><code>language</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: complex</li>\n<li>defined in this schema</li>\n</ul>\n<h3>language Type</h3>\n<p>Unknown type ``.</p>\n<pre><code class=\"language-json\">{\n  &quot;isrequired&quot;: true,\n  &quot;simpletype&quot;: &quot;complex&quot;\n}\n</code></pre>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>programming</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>unit-tests</h2>\n<p><code>unit-tests</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>unit-tests Type</h3>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>correct-points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>incorrect-points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>testcode</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>correct-points</h4>\n<p><code>correct-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>correct-points Type</h5>\n<p><code>number</code></p>\n<h4>id</h4>\n<p><code>id</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>id Type</h5>\n<p><code>string</code></p>\n<h4>incorrect-points</h4>\n<p><code>incorrect-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>incorrect-points Type</h5>\n<p><code>number</code></p>\n<h4>testcode</h4>\n<p><code>testcode</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>testcode Type</h5>\n<p><code>string</code></p>\n<h4>title</h4>\n<p><code>title</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>title Type</h5>\n<p><code>string</code></p>\n",
      "id": 9
    },
    {
      "path": "simple-text-exercise.schema.md",
      "url": "simple-text-exercise.schema.html",
      "content": "# simpletext/core Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                                                           |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | -------------------------------------------------------------------- |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [simple-text-exercise.schema.json](simple-text-exercise.schema.json) |\n\n# simpletext/core Properties\n\n| Property              | Type      | Required     | Nullable | Defined by                                 |\n| --------------------- | --------- | ------------ | -------- | ------------------------------------------ |\n| [points](#points)     | `number`  | **Required** | No       | simpletext/core (this schema)              |\n| [shuffled](#shuffled) | `boolean` | Optional     | No       | simpletext/core (this schema)              |\n| [textsize](#textsize) | `object`  | **Required** | No       | simpletext/core (this schema)              |\n| [type](#type)         | `enum`    | **Required** | No       | simpletext/core (this schema)              |\n| [voting](#voting)     | `boolean` | Optional     | No       | simpletext/core (this schema)              |\n| `*`                   | any       | Additional   | Yes      | this schema _allows_ additional properties |\n\n## points\n\n`points`\n\n- is **required**\n- type: `number`\n- defined in this schema\n\n### points Type\n\n`number`\n\n## shuffled\n\n`shuffled`\n\n- is optional\n- type: `boolean`\n- defined in this schema\n\n### shuffled Type\n\n`boolean`\n\n## textsize\n\n`textsize`\n\n- is **required**\n- type: `object`\n- defined in this schema\n\n### textsize Type\n\n`object` with following properties:\n\n| Property | Type    | Required     |\n| -------- | ------- | ------------ |\n| `max`    | integer | **Required** |\n| `min`    | number  | **Required** |\n| `unit`   |         | **Required** |\n\n#### max\n\n`max`\n\n- is **required**\n- type: `integer`\n\n##### max Type\n\n`integer`\n\n- minimum value: `1`\n\n#### min\n\n`min`\n\n- is **required**\n- type: `number`\n\n##### min Type\n\n`number`\n\n#### unit\n\n`unit`\n\n- is **required**\n- type: `enum`\n\nThe value of this property **must** be equal to one of the [known values below](#textsize-known-values).\n\n##### unit Known Values\n\n| Value        | Description |\n| ------------ | ----------- |\n| `characters` |             |\n| `words`      |             |\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value         | Description |\n| ------------- | ----------- |\n| `simple-text` |             |\n\n## voting\n\n`voting`\n\n- is optional\n- type: `boolean`\n- defined in this schema\n\n### voting Type\n\n`boolean`\n",
      "html": "<h1>simpletext/core Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"simple-text-exercise.schema.json\">simple-text-exercise.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>simpletext/core Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#points\">points</a></td>\n<td><code>number</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>simpletext/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#shuffled\">shuffled</a></td>\n<td><code>boolean</code></td>\n<td>Optional</td>\n<td>No</td>\n<td>simpletext/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#textsize\">textsize</a></td>\n<td><code>object</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>simpletext/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>simpletext/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#voting\">voting</a></td>\n<td><code>boolean</code></td>\n<td>Optional</td>\n<td>No</td>\n<td>simpletext/core (this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>points</h2>\n<p><code>points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>points Type</h3>\n<p><code>number</code></p>\n<h2>shuffled</h2>\n<p><code>shuffled</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>shuffled Type</h3>\n<p><code>boolean</code></p>\n<h2>textsize</h2>\n<p><code>textsize</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>textsize Type</h3>\n<p><code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>max</code></td>\n<td>integer</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>min</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td></td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>max</h4>\n<p><code>max</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>integer</code></li>\n</ul>\n<h5>max Type</h5>\n<p><code>integer</code></p>\n<ul>\n<li>minimum value: <code>1</code></li>\n</ul>\n<h4>min</h4>\n<p><code>min</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>min Type</h5>\n<p><code>number</code></p>\n<h4>unit</h4>\n<p><code>unit</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#textsize-known-values\">known values below</a>.</p>\n<h5>unit Known Values</h5>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>characters</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>words</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>simple-text</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>voting</h2>\n<p><code>voting</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>voting Type</h3>\n<p><code>boolean</code></p>\n",
      "id": 10
    },
    {
      "path": "single-choice-exercise.schema.md",
      "url": "single-choice-exercise.schema.html",
      "content": "# Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                                                               |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | ------------------------------------------------------------------------ |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [single-choice-exercise.schema.json](single-choice-exercise.schema.json) |\n\n# Properties\n\n| Property              | Type       | Required     | Nullable | Defined by                                 |\n| --------------------- | ---------- | ------------ | -------- | ------------------------------------------ |\n| [answers](#answers)   | `object[]` | **Required** | No       | (this schema)                              |\n| [shuffled](#shuffled) | `boolean`  | Optional     | No       | (this schema)                              |\n| [type](#type)         | `enum`     | **Required** | No       | (this schema)                              |\n| [voting](#voting)     | `boolean`  | Optional     | No       | (this schema)                              |\n| `*`                   | any        | Additional   | Yes      | this schema _allows_ additional properties |\n\n## answers\n\n`answers`\n\n- is **required**\n- type: `object[]`\n- defined in this schema\n\n### answers Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property            | Type   | Required     |\n| ------------------- | ------ | ------------ |\n| `id`                | string | **Required** |\n| `selected-points`   | number | **Required** |\n| `text`              | string | **Required** |\n| `unselected-points` | number | **Required** |\n\n#### id\n\n`id`\n\n- is **required**\n- type: `string`\n\n##### id Type\n\n`string`\n\n#### selected-points\n\n`selected-points`\n\n- is **required**\n- type: `number`\n\n##### selected-points Type\n\n`number`\n\n#### text\n\n`text`\n\n- is **required**\n- type: `string`\n\n##### text Type\n\n`string`\n\n#### unselected-points\n\n`unselected-points`\n\n- is **required**\n- type: `number`\n\n##### unselected-points Type\n\n`number`\n\n## shuffled\n\n`shuffled`\n\n- is optional\n- type: `boolean`\n- defined in this schema\n\n### shuffled Type\n\n`boolean`\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value           | Description |\n| --------------- | ----------- |\n| `single-choice` |             |\n\n## voting\n\n`voting`\n\n- is optional\n- type: `boolean`\n- defined in this schema\n\n### voting Type\n\n`boolean`\n",
      "html": "<h1>Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"single-choice-exercise.schema.json\">single-choice-exercise.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#answers\">answers</a></td>\n<td><code>object[]</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>(this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#shuffled\">shuffled</a></td>\n<td><code>boolean</code></td>\n<td>Optional</td>\n<td>No</td>\n<td>(this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>(this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#voting\">voting</a></td>\n<td><code>boolean</code></td>\n<td>Optional</td>\n<td>No</td>\n<td>(this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>answers</h2>\n<p><code>answers</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>answers Type</h3>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>selected-points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>unselected-points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>id</h4>\n<p><code>id</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>id Type</h5>\n<p><code>string</code></p>\n<h4>selected-points</h4>\n<p><code>selected-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>selected-points Type</h5>\n<p><code>number</code></p>\n<h4>text</h4>\n<p><code>text</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>text Type</h5>\n<p><code>string</code></p>\n<h4>unselected-points</h4>\n<p><code>unselected-points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>unselected-points Type</h5>\n<p><code>number</code></p>\n<h2>shuffled</h2>\n<p><code>shuffled</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>shuffled Type</h3>\n<p><code>boolean</code></p>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>single-choice</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>voting</h2>\n<p><code>voting</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>voting Type</h3>\n<p><code>boolean</code></p>\n",
      "id": 11
    },
    {
      "path": "sorting-exercise.schema.md",
      "url": "sorting-exercise.schema.html",
      "content": "# sorting-question/core Schema\n\n```\n\n```\n\n| Abstract            | Extensible | Status       | Identifiable | Custom Properties | Additional Properties | Defined In                                                   |\n| ------------------- | ---------- | ------------ | ------------ | ----------------- | --------------------- | ------------------------------------------------------------ |\n| Can be instantiated | No         | Experimental | No           | Forbidden         | Permitted             | [sorting-exercise.schema.json](sorting-exercise.schema.json) |\n\n# sorting-question/core Properties\n\n| Property              | Type       | Required     | Nullable | Defined by                                 |\n| --------------------- | ---------- | ------------ | -------- | ------------------------------------------ |\n| [answers](#answers)   | `object[]` | **Required** | No       | sorting-question/core (this schema)        |\n| [shuffled](#shuffled) | `boolean`  | Optional     | No       | sorting-question/core (this schema)        |\n| [type](#type)         | `enum`     | **Required** | No       | sorting-question/core (this schema)        |\n| `*`                   | any        | Additional   | Yes      | this schema _allows_ additional properties |\n\n## answers\n\n`answers`\n\n- is **required**\n- type: `object[]`\n- defined in this schema\n\n### answers Type\n\nArray type: `object[]`\n\nAll items must be of the type: `object` with following properties:\n\n| Property  | Type    | Required     |\n| --------- | ------- | ------------ |\n| `correct` | boolean | **Required** |\n| `points`  | number  | **Required** |\n| `text`    | string  | **Required** |\n\n#### correct\n\n`correct`\n\n- is **required**\n- type: `boolean`\n\n##### correct Type\n\n`boolean`\n\n#### points\n\n`points`\n\n- is **required**\n- type: `number`\n\n##### points Type\n\n`number`\n\n#### text\n\n`text`\n\n- is **required**\n- type: `string`\n\n##### text Type\n\n`string`\n\n## shuffled\n\n`shuffled`\n\n- is optional\n- type: `boolean`\n- defined in this schema\n\n### shuffled Type\n\n`boolean`\n\n## type\n\n`type`\n\n- is **required**\n- type: `enum`\n- defined in this schema\n\nThe value of this property **must** be equal to one of the [known values below](#type-known-values).\n\n### type Known Values\n\n| Value     | Description |\n| --------- | ----------- |\n| `sorting` |             |\n",
      "html": "<h1>sorting-question/core Schema</h1>\n<pre><code>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Abstract</th>\n<th>Extensible</th>\n<th>Status</th>\n<th>Identifiable</th>\n<th>Custom Properties</th>\n<th>Additional Properties</th>\n<th>Defined In</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Can be instantiated</td>\n<td>No</td>\n<td>Experimental</td>\n<td>No</td>\n<td>Forbidden</td>\n<td>Permitted</td>\n<td><a href=\"sorting-exercise.schema.json\">sorting-exercise.schema.json</a></td>\n</tr>\n</tbody>\n</table>\n<h1>sorting-question/core Properties</h1>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n<th>Nullable</th>\n<th>Defined by</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#answers\">answers</a></td>\n<td><code>object[]</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>sorting-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#shuffled\">shuffled</a></td>\n<td><code>boolean</code></td>\n<td>Optional</td>\n<td>No</td>\n<td>sorting-question/core (this schema)</td>\n</tr>\n<tr>\n<td><a href=\"#type\">type</a></td>\n<td><code>enum</code></td>\n<td><strong>Required</strong></td>\n<td>No</td>\n<td>sorting-question/core (this schema)</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>any</td>\n<td>Additional</td>\n<td>Yes</td>\n<td>this schema <em>allows</em> additional properties</td>\n</tr>\n</tbody>\n</table>\n<h2>answers</h2>\n<p><code>answers</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>object[]</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>answers Type</h3>\n<p>Array type: <code>object[]</code></p>\n<p>All items must be of the type: <code>object</code> with following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>correct</code></td>\n<td>boolean</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>points</code></td>\n<td>number</td>\n<td><strong>Required</strong></td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>string</td>\n<td><strong>Required</strong></td>\n</tr>\n</tbody>\n</table>\n<h4>correct</h4>\n<p><code>correct</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>boolean</code></li>\n</ul>\n<h5>correct Type</h5>\n<p><code>boolean</code></p>\n<h4>points</h4>\n<p><code>points</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>number</code></li>\n</ul>\n<h5>points Type</h5>\n<p><code>number</code></p>\n<h4>text</h4>\n<p><code>text</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>string</code></li>\n</ul>\n<h5>text Type</h5>\n<p><code>string</code></p>\n<h2>shuffled</h2>\n<p><code>shuffled</code></p>\n<ul>\n<li>is optional</li>\n<li>type: <code>boolean</code></li>\n<li>defined in this schema</li>\n</ul>\n<h3>shuffled Type</h3>\n<p><code>boolean</code></p>\n<h2>type</h2>\n<p><code>type</code></p>\n<ul>\n<li>is <strong>required</strong></li>\n<li>type: <code>enum</code></li>\n<li>defined in this schema</li>\n</ul>\n<p>The value of this property <strong>must</strong> be equal to one of the <a href=\"#type-known-values\">known values below</a>.</p>\n<h3>type Known Values</h3>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>sorting</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
      "id": 12
    }
  ]
}